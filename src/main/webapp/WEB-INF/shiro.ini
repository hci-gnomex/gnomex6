[main]
#Configuring custom CDIFactory for UserService, which is used by hci.ri.auth realms
userService = hci.gnomex.service.UserService

signingConfig = hci.ri.auth.util.KeystoreRSASignatureConfiguration
signingConfig.propertiesPath = C:/properties/auth/signing.properties


jwtAuthenticator = org.pac4j.jwt.credentials.authenticator.JwtAuthenticator
jwtAuthenticator.signatureConfiguration = $signingConfig

headerClient = org.pac4j.http.client.direct.HeaderClient
headerClient.headerName = Authorization
headerClient.authenticator = $jwtAuthenticator

clients.clients = $headerClient

#LDAP
uofuRealm = hci.ri.auth.security.LdapPropertyFileAuthcRealm
uofuRealm.configFile = shiro_uofu_ldap.properties
uofuRealm.userService  = $userService
uofuRealm.contextFactory.environment[java.naming.security.protocol]=ssl

#Local
customMatcher  = hci.gnomex.security.CredentialsMatcher
localRealm = hci.ri.auth.security.LocalAuthcRealm
localRealm.userService  = $userService
localRealm.credentialsMatcher = $customMatcher

pac4j = hci.ri.auth.security.AuthModelPac4jAuthzRealm
pac4j.userService = $userService

#Configured realms - order matters
securityManager.realms = $uofuRealm, $localRealm, $pac4j

#Try to authenticate against realms until one is successful
authcStrategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $authcStrategy

pac4jLogout = hci.ri.auth.filter.LogoutFilter
pac4jLogout.defaultUrl = logout-success.jsp
pac4jLogout.destroySession = true
pac4jLogout.config = $config

authorizedSecurityFilter = hci.ri.auth.security.CombinedShiroPac4jSecurityFilter
authorizedSecurityFilter.config = $config
authorizedSecurityFilter.clients = HeaderClient

[urls]
#non-secure pages/paths
/api/user-session/** = anon
/css/** = anon
/resources/** = anon
/doc/** = anon
/images/** = anon

#requires authentication
/api/** = authorizedSecurityFilter

#path to trigger logout
/logout = pac4jLogout

/** = anon
